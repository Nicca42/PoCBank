{
  "contractName": "AccessAccount",
  "abi": [
    {
      "inputs": [
        {
          "name": "_owner",
          "type": "address"
        },
        {
          "name": "_chosenType",
          "type": "uint8"
        },
        {
          "name": "_limit",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "_owner",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "_bank",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "_accountType",
          "type": "uint8"
        }
      ],
      "name": "LogCreatedAccessAcount",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "_where",
          "type": "string"
        }
      ],
      "name": "LogUnexpectedRevert",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "_desc",
          "type": "string"
        }
      ],
      "name": "LogProgress",
      "type": "event"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getFrozen",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getBalance",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getOwner",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getLimit",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_newLimit",
          "type": "uint256"
        }
      ],
      "name": "setLimit",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "freeze",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "defrost",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "dissolve",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_newOwnerAddress",
          "type": "address"
        }
      ],
      "name": "changeOwner",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "deposit",
      "outputs": [],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "withdraw",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": "0x608060405234801561001057600080fd5b50604051606080610f4483398101604090815281516020830151919092015160018054600160a060020a038516600160a060020a03199182161790915560008054909116331790556004805483919061ff00191661010083600281111561007357fe5b021790555060038190556004805460ff1916905560408051600160a060020a038516815233602082018190527f4f1a20e20b0b2f3cdc1fcd1d7631e4cb35cadb8c1b8ea065a71a94167adf1e0f928692869181018260028111156100d357fe5b60ff168152602001935050505060405180910390a1505050610e4a806100fa6000396000f3006080604052600436106100ae5763ffffffff7c010000000000000000000000000000000000000000000000000000000060003504166312065fe081146100b357806327ea6f2b146100da5780632e1a7d4d146100f45780633bef8a3a1461010c57806362a5af3b146101215780637495b35314610136578063893d20e81461015f578063a6f9dae114610190578063b295a00e146101b1578063d0e30db0146101c6578063f21cdf6f146101ce575b600080fd5b3480156100bf57600080fd5b506100c86101e3565b60408051918252519081900360200190f35b3480156100e657600080fd5b506100f26004356101e9565b005b34801561010057600080fd5b506100f2600435610250565b34801561011857600080fd5b506100f26106a6565b34801561012d57600080fd5b506100f2610783565b34801561014257600080fd5b5061014b61088c565b604080519115158252519081900360200190f35b34801561016b57600080fd5b50610174610895565b60408051600160a060020a039092168252519081900360200190f35b34801561019c57600080fd5b506100f2600160a060020a0360043516610945565b3480156101bd57600080fd5b506100c8610ace565b6100f2610b75565b3480156101da57600080fd5b506100f2610d14565b60025490565b600054600160a060020a0316331461024b576040805160e560020a62461bcd02815260206004820152601c60248201527f46756e6374696f6e206f6e6c7920757361626c652062792062616e6b00000000604482015290519081900360640190fd5b600355565b600054600160a060020a03163314806102735750600154600160a060020a031633145b15156102ef576040805160e560020a62461bcd02815260206004820152602160248201527f46756e6374696f6e206f6e6c792061636365737369626c65206279206f776e6560448201527f7200000000000000000000000000000000000000000000000000000000000000606482015290519081900360840190fd5b60045460ff161561034a576040805160e560020a62461bcd02815260206004820152601160248201527f4163636f756e742069732066726f7a656e000000000000000000000000000000604482015290519081900360640190fd5b610352610783565b6040805160208082526024908201527f28696e2077697468647261772920616674657220667265657a696e6720616363818301527f6f756e7400000000000000000000000000000000000000000000000000000000606082015290517fb981afc16bc609765b6005bd910c0e9ef3424f3c61a05afcbbf88d11f414669d9181900360800190a16000600454610100900460ff1660028111156103f057fe5b1461046b576040805160e560020a62461bcd02815260206004820152602e60248201527f506c65617365207573652077697468647261772066756e6374696f6e20696e2060448201527f6368696c6420636f6e7472616374000000000000000000000000000000000000606482015290519081900360840190fd5b604080516020808252602b908201527f28616674657220312072657175697265292061667465722074727573742f6465818301527f6c61792072657175697265000000000000000000000000000000000000000000606082015290517fb981afc16bc609765b6005bd910c0e9ef3424f3c61a05afcbbf88d11f414669d9181900360800190a1600254811115610571576040805160e560020a62461bcd02815260206004820152602960248201527f43616e6e6f74207769746864726177206d6f72652066756e6473207468616e2060448201527f617661696c61626c650000000000000000000000000000000000000000000000606482015290519081900360840190fd5b604080516020808252603b908201527f286166746572203220726571756972652920616674657220616d6f756e742067818301527f65747320636865636b656420616761696e73742062616c616e63650000000000606082015290517fb981afc16bc609765b6005bd910c0e9ef3424f3c61a05afcbbf88d11f414669d9181900360800190a1600280548290039055600154604051600160a060020a039091169082156108fc029083906000818181858888f1935050505015801561063a573d6000803e3d6000fd5b50604080516020808252601b908201527f2829206166746572207472616e73666572696e6720616d6f756e7400000000008183015290517fb981afc16bc609765b6005bd910c0e9ef3424f3c61a05afcbbf88d11f414669d9181900360600190a16106a3610d14565b50565b600054600160a060020a03163314610708576040805160e560020a62461bcd02815260206004820152601c60248201527f46756e6374696f6e206f6e6c7920757361626c652062792062616e6b00000000604482015290519081900360640190fd5b6004805460ff191660011790556040805160208082526010908201527f2861636365737329206469736f6c7665000000000000000000000000000000008183015290517f6a42c50d3ee00b78df9f99768064c629066807b2ab738674e00b018c696be3789181900360600190a1600154600160a060020a0316ff5b600054600160a060020a03163314806107a65750600154600160a060020a031633145b1515610822576040805160e560020a62461bcd02815260206004820152602160248201527f46756e6374696f6e206f6e6c792061636365737369626c65206279206f776e6560448201527f7200000000000000000000000000000000000000000000000000000000000000606482015290519081900360840190fd5b60045460ff161561087d576040805160e560020a62461bcd02815260206004820152601160248201527f4163636f756e742069732066726f7a656e000000000000000000000000000000604482015290519081900360640190fd5b6004805460ff19166001179055565b60045460ff1690565b60008054600160a060020a03163314806108b95750600154600160a060020a031633145b1515610935576040805160e560020a62461bcd02815260206004820152602160248201527f46756e6374696f6e206f6e6c792061636365737369626c65206279206f776e6560448201527f7200000000000000000000000000000000000000000000000000000000000000606482015290519081900360840190fd5b50600154600160a060020a031690565b600054600160a060020a031633146109a7576040805160e560020a62461bcd02815260206004820152601c60248201527f46756e6374696f6e206f6e6c7920757361626c652062792062616e6b00000000604482015290519081900360640190fd5b60045460ff1615610a02576040805160e560020a62461bcd02815260206004820152601160248201527f4163636f756e742069732066726f7a656e000000000000000000000000000000604482015290519081900360640190fd5b610a0a610783565b6002600454610100900460ff166002811115610a2257fe5b1415610a9e576040805160e560020a62461bcd02815260206004820152603160248201527f506c6561736520757365206368616e67654f776e65722066756e6374696f6e2060448201527f696e20747275737420636f6e7472616374000000000000000000000000000000606482015290519081900360840190fd5b6001805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0383161790556106a3610d14565b60008054600160a060020a0316331480610af25750600154600160a060020a031633145b1515610b6e576040805160e560020a62461bcd02815260206004820152602160248201527f46756e6374696f6e206f6e6c792061636365737369626c65206279206f776e6560448201527f7200000000000000000000000000000000000000000000000000000000000000606482015290519081900360840190fd5b5060035490565b60045460ff1615610bd0576040805160e560020a62461bcd02815260206004820152601160248201527f4163636f756e742069732066726f7a656e000000000000000000000000000000604482015290519081900360640190fd5b60003411610c28576040805160e560020a62461bcd02815260206004820152601860248201527f56616c75652063616e6e6f74206265206e656761746976650000000000000000604482015290519081900360640190fd5b60003460025401111515610cac576040805160e560020a62461bcd02815260206004820152602260248201527f56616c75652063616e6e6f74206d616b652062616c616e6365206e656761746960448201527f7665000000000000000000000000000000000000000000000000000000000000606482015290519081900360840190fd5b60035460025434011115610d0a576040805160e560020a62461bcd02815260206004820181905260248201527f4465706f7369742074616b6573206163636f756e74206f766572206c696d6974604482015290519081900360640190fd5b6002805434019055565b600054600160a060020a0316331480610d375750600154600160a060020a031633145b1515610db3576040805160e560020a62461bcd02815260206004820152602160248201527f46756e6374696f6e206f6e6c792061636365737369626c65206279206f776e6560448201527f7200000000000000000000000000000000000000000000000000000000000000606482015290519081900360840190fd5b60045460ff161515600114610e12576040805160e560020a62461bcd02815260206004820152601860248201527f4163636f756e7420616c726561647920756e66726f7a656e0000000000000000604482015290519081900360640190fd5b6004805460ff191690555600a165627a7a72305820f7c8ae5e45a3533acceb75d3c3b839e88e1a3d950c6a5bafd390400f269403a80029",
  "deployedBytecode": "0x6080604052600436106100ae5763ffffffff7c010000000000000000000000000000000000000000000000000000000060003504166312065fe081146100b357806327ea6f2b146100da5780632e1a7d4d146100f45780633bef8a3a1461010c57806362a5af3b146101215780637495b35314610136578063893d20e81461015f578063a6f9dae114610190578063b295a00e146101b1578063d0e30db0146101c6578063f21cdf6f146101ce575b600080fd5b3480156100bf57600080fd5b506100c86101e3565b60408051918252519081900360200190f35b3480156100e657600080fd5b506100f26004356101e9565b005b34801561010057600080fd5b506100f2600435610250565b34801561011857600080fd5b506100f26106a6565b34801561012d57600080fd5b506100f2610783565b34801561014257600080fd5b5061014b61088c565b604080519115158252519081900360200190f35b34801561016b57600080fd5b50610174610895565b60408051600160a060020a039092168252519081900360200190f35b34801561019c57600080fd5b506100f2600160a060020a0360043516610945565b3480156101bd57600080fd5b506100c8610ace565b6100f2610b75565b3480156101da57600080fd5b506100f2610d14565b60025490565b600054600160a060020a0316331461024b576040805160e560020a62461bcd02815260206004820152601c60248201527f46756e6374696f6e206f6e6c7920757361626c652062792062616e6b00000000604482015290519081900360640190fd5b600355565b600054600160a060020a03163314806102735750600154600160a060020a031633145b15156102ef576040805160e560020a62461bcd02815260206004820152602160248201527f46756e6374696f6e206f6e6c792061636365737369626c65206279206f776e6560448201527f7200000000000000000000000000000000000000000000000000000000000000606482015290519081900360840190fd5b60045460ff161561034a576040805160e560020a62461bcd02815260206004820152601160248201527f4163636f756e742069732066726f7a656e000000000000000000000000000000604482015290519081900360640190fd5b610352610783565b6040805160208082526024908201527f28696e2077697468647261772920616674657220667265657a696e6720616363818301527f6f756e7400000000000000000000000000000000000000000000000000000000606082015290517fb981afc16bc609765b6005bd910c0e9ef3424f3c61a05afcbbf88d11f414669d9181900360800190a16000600454610100900460ff1660028111156103f057fe5b1461046b576040805160e560020a62461bcd02815260206004820152602e60248201527f506c65617365207573652077697468647261772066756e6374696f6e20696e2060448201527f6368696c6420636f6e7472616374000000000000000000000000000000000000606482015290519081900360840190fd5b604080516020808252602b908201527f28616674657220312072657175697265292061667465722074727573742f6465818301527f6c61792072657175697265000000000000000000000000000000000000000000606082015290517fb981afc16bc609765b6005bd910c0e9ef3424f3c61a05afcbbf88d11f414669d9181900360800190a1600254811115610571576040805160e560020a62461bcd02815260206004820152602960248201527f43616e6e6f74207769746864726177206d6f72652066756e6473207468616e2060448201527f617661696c61626c650000000000000000000000000000000000000000000000606482015290519081900360840190fd5b604080516020808252603b908201527f286166746572203220726571756972652920616674657220616d6f756e742067818301527f65747320636865636b656420616761696e73742062616c616e63650000000000606082015290517fb981afc16bc609765b6005bd910c0e9ef3424f3c61a05afcbbf88d11f414669d9181900360800190a1600280548290039055600154604051600160a060020a039091169082156108fc029083906000818181858888f1935050505015801561063a573d6000803e3d6000fd5b50604080516020808252601b908201527f2829206166746572207472616e73666572696e6720616d6f756e7400000000008183015290517fb981afc16bc609765b6005bd910c0e9ef3424f3c61a05afcbbf88d11f414669d9181900360600190a16106a3610d14565b50565b600054600160a060020a03163314610708576040805160e560020a62461bcd02815260206004820152601c60248201527f46756e6374696f6e206f6e6c7920757361626c652062792062616e6b00000000604482015290519081900360640190fd5b6004805460ff191660011790556040805160208082526010908201527f2861636365737329206469736f6c7665000000000000000000000000000000008183015290517f6a42c50d3ee00b78df9f99768064c629066807b2ab738674e00b018c696be3789181900360600190a1600154600160a060020a0316ff5b600054600160a060020a03163314806107a65750600154600160a060020a031633145b1515610822576040805160e560020a62461bcd02815260206004820152602160248201527f46756e6374696f6e206f6e6c792061636365737369626c65206279206f776e6560448201527f7200000000000000000000000000000000000000000000000000000000000000606482015290519081900360840190fd5b60045460ff161561087d576040805160e560020a62461bcd02815260206004820152601160248201527f4163636f756e742069732066726f7a656e000000000000000000000000000000604482015290519081900360640190fd5b6004805460ff19166001179055565b60045460ff1690565b60008054600160a060020a03163314806108b95750600154600160a060020a031633145b1515610935576040805160e560020a62461bcd02815260206004820152602160248201527f46756e6374696f6e206f6e6c792061636365737369626c65206279206f776e6560448201527f7200000000000000000000000000000000000000000000000000000000000000606482015290519081900360840190fd5b50600154600160a060020a031690565b600054600160a060020a031633146109a7576040805160e560020a62461bcd02815260206004820152601c60248201527f46756e6374696f6e206f6e6c7920757361626c652062792062616e6b00000000604482015290519081900360640190fd5b60045460ff1615610a02576040805160e560020a62461bcd02815260206004820152601160248201527f4163636f756e742069732066726f7a656e000000000000000000000000000000604482015290519081900360640190fd5b610a0a610783565b6002600454610100900460ff166002811115610a2257fe5b1415610a9e576040805160e560020a62461bcd02815260206004820152603160248201527f506c6561736520757365206368616e67654f776e65722066756e6374696f6e2060448201527f696e20747275737420636f6e7472616374000000000000000000000000000000606482015290519081900360840190fd5b6001805473ffffffffffffffffffffffffffffffffffffffff1916600160a060020a0383161790556106a3610d14565b60008054600160a060020a0316331480610af25750600154600160a060020a031633145b1515610b6e576040805160e560020a62461bcd02815260206004820152602160248201527f46756e6374696f6e206f6e6c792061636365737369626c65206279206f776e6560448201527f7200000000000000000000000000000000000000000000000000000000000000606482015290519081900360840190fd5b5060035490565b60045460ff1615610bd0576040805160e560020a62461bcd02815260206004820152601160248201527f4163636f756e742069732066726f7a656e000000000000000000000000000000604482015290519081900360640190fd5b60003411610c28576040805160e560020a62461bcd02815260206004820152601860248201527f56616c75652063616e6e6f74206265206e656761746976650000000000000000604482015290519081900360640190fd5b60003460025401111515610cac576040805160e560020a62461bcd02815260206004820152602260248201527f56616c75652063616e6e6f74206d616b652062616c616e6365206e656761746960448201527f7665000000000000000000000000000000000000000000000000000000000000606482015290519081900360840190fd5b60035460025434011115610d0a576040805160e560020a62461bcd02815260206004820181905260248201527f4465706f7369742074616b6573206163636f756e74206f766572206c696d6974604482015290519081900360640190fd5b6002805434019055565b600054600160a060020a0316331480610d375750600154600160a060020a031633145b1515610db3576040805160e560020a62461bcd02815260206004820152602160248201527f46756e6374696f6e206f6e6c792061636365737369626c65206279206f776e6560448201527f7200000000000000000000000000000000000000000000000000000000000000606482015290519081900360840190fd5b60045460ff161515600114610e12576040805160e560020a62461bcd02815260206004820152601860248201527f4163636f756e7420616c726561647920756e66726f7a656e0000000000000000604482015290519081900360640190fd5b6004805460ff191690555600a165627a7a72305820f7c8ae5e45a3533acceb75d3c3b839e88e1a3d950c6a5bafd390400f269403a80029",
  "sourceMap": "28:5599:0:-;;;1321:330;8:9:-1;5:2;;;30:1;27;20:12;5:2;1321:330:0;;;;;;;;;;;;;;;;;;;;;;;;;1419:12;:21;;-1:-1:-1;;;;;1419:21:0;;-1:-1:-1;;;;;;1419:21:0;;;;;;;:12;1451:24;;;;;1465:10;1451:24;;;1486:15;:29;;1321:330;;1486:15;-1:-1:-1;;1486:29:0;1419:21;1321:330;1486:29;;;;;;;;;;;;-1:-1:-1;1526:12:0;:21;;;1558:6;:14;;-1:-1:-1;;1558:14:0;;;1588:55;;;-1:-1:-1;;;;;1588:55:0;;;;1619:10;1588:55;;;;;;;;1611:6;;1631:11;;1588:55;;1631:11;1588:55;;;;;;;;;;;;;;;;;;;;;;;;;;1321:330;;;28:5599;;;;;;",
  "deployedSourceMap": "28:5599:0:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1956:113;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1956:113:0;;;;;;;;;;;;;;;;;;;;2366:116;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;2366:116:0;;;;;;;4890:734;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;4890:734:0;;;;;3156:176;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3156:176:0;;;;2640:110;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2640:110:0;;;;1750:112;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1750:112:0;;;;;;;;;;;;;;;;;;;;;;2077:138;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2077:138:0;;;;;;;;-1:-1:-1;;;;;2077:138:0;;;;;;;;;;;;;;3650:308;;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;3650:308:0;;;-1:-1:-1;;;;;3650:308:0;;;2223:135;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2223:135:0;;;;4218:349;;;;2857:155;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2857:155:0;;;;1956:113;2054:7;;1956:113;:::o;2366:116::-;792:11;;-1:-1:-1;;;;;792:11:0;778:10;:25;770:66;;;;;-1:-1:-1;;;;;770:66:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;2450:12;:24;2366:116::o;4890:734::-;533:11;;-1:-1:-1;;;;;533:11:0;519:10;:25;;:55;;-1:-1:-1;562:12:0;;-1:-1:-1;;;;;562:12:0;548:10;:26;519:55;511:101;;;;;;;-1:-1:-1;;;;;511:101:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1010:6;;;;:15;1002:45;;;;;-1:-1:-1;;;;;1002:45:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;4993:8;:6;:8::i;:::-;5019:59;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5118:18;5099:15;;;;;;;:37;;;;;;;;;5091:96;;;;;-1:-1:-1;;;;;5091:96:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5205:66;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5303:7;;5292:18;;;5284:72;;;;;-1:-1:-1;;;;;5284:72:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5374:82;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5469:7;:18;;;;;;;-1:-1:-1;5498:12:0;:30;;-1:-1:-1;;;;;5498:12:0;;;;:30;;;;;5469:18;;-1:-1:-1;5498:30:0;-1:-1:-1;5498:30:0;5469:18;5498:12;:30;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;-1:-1;5546:50:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;5607:9;:7;:9::i;:::-;4890:734;:::o;3156:176::-;792:11;;-1:-1:-1;;;;;792:11:0;778:10;:25;770:66;;;;;-1:-1:-1;;;;;770:66:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;3226:6;:14;;-1:-1:-1;;3226:14:0;3236:4;3226:14;;;3256:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;3311:12;;-1:-1:-1;;;;;3311:12:0;3298:26;2640:110;533:11;;-1:-1:-1;;;;;533:11:0;519:10;:25;;:55;;-1:-1:-1;562:12:0;;-1:-1:-1;;;;;562:12:0;548:10;:26;519:55;511:101;;;;;;;-1:-1:-1;;;;;511:101:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1010:6;;;;:15;1002:45;;;;;-1:-1:-1;;;;;1002:45:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;2729:6;:13;;-1:-1:-1;;2729:13:0;2738:4;2729:13;;;2640:110::o;1750:112::-;1848:6;;;;1750:112;:::o;2077:138::-;2163:7;533:11;;-1:-1:-1;;;;;533:11:0;519:10;:25;;:55;;-1:-1:-1;562:12:0;;-1:-1:-1;;;;;562:12:0;548:10;:26;519:55;511:101;;;;;;;-1:-1:-1;;;;;511:101:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2195:12:0;;-1:-1:-1;;;;;2195:12:0;;2077:138::o;3650:308::-;792:11;;-1:-1:-1;;;;;792:11:0;778:10;:25;770:66;;;;;-1:-1:-1;;;;;770:66:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;1010:6;;;;:15;1002:45;;;;;-1:-1:-1;;;;;1002:45:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;3767:8;:6;:8::i;:::-;3815:17;3796:15;;;;;;;:36;;;;;;;;;;3788:98;;;;;-1:-1:-1;;;;;3788:98:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3897:12;:31;;-1:-1:-1;;3897:31:0;-1:-1:-1;;;;;3897:31:0;;;;;3941:9;:7;:9::i;2223:135::-;2309:4;533:11;;-1:-1:-1;;;;;533:11:0;519:10;:25;;:55;;-1:-1:-1;562:12:0;;-1:-1:-1;;;;;562:12:0;548:10;:26;519:55;511:101;;;;;;;-1:-1:-1;;;;;511:101:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2338:12:0;;2223:135;:::o;4218:349::-;1010:6;;;;:15;1002:45;;;;;-1:-1:-1;;;;;1002:45:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;4326:1;4314:9;:13;4306:50;;;;;-1:-1:-1;;;;;4306:50:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;4397:1;4385:9;4375:7;;:19;:23;4367:70;;;;;;;-1:-1:-1;;;;;4367:70:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4479:12;;4456:7;;4466:9;4456:19;:35;;4448:80;;;;;-1:-1:-1;;;;;4448:80:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4539:7;:20;;4550:9;4539:20;;;4218:349::o;2857:155::-;533:11;;-1:-1:-1;;;;;533:11:0;519:10;:25;;:55;;-1:-1:-1;562:12:0;;-1:-1:-1;;;;;562:12:0;548:10;:26;519:55;511:101;;;;;;;-1:-1:-1;;;;;511:101:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2936:6;;;;:14;;:6;:14;2928:51;;;;;-1:-1:-1;;;;;2928:51:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;2990:6;:14;;-1:-1:-1;;2990:14:0;;;2857:155::o",
  "source": "pragma solidity ^0.4.24;\r\n\r\ncontract AccessAccount{\r\n    address bankAddress;\r\n    address onwerAddress;\r\n    uint balance;\r\n    uint accountLimit;\r\n    bool frozen;\r\n    enum AccountType {access, delay, trust}\r\n    AccountType thisAccountType;\r\n\r\n    event LogCreatedAccessAcount(address _owner, address _bank, AccountType _accountType);\r\n    event LogUnexpectedRevert(string _where);\r\n\r\n    /**\r\n      * @dev checks that the msg.sender is an owner of the contract\r\n      */\r\n    modifier isOwner() {\r\n        require(msg.sender == bankAddress || msg.sender == onwerAddress, \"Function only accessible by owner\");\r\n        _;\r\n    }\r\n\r\n    /**\r\n      * @dev checks that the bank is the only address able of using the function\r\n      */\r\n    modifier isBank() {\r\n        require(msg.sender == bankAddress, \"Function only usable by bank\");\r\n        _;\r\n    }\r\n\r\n    /** \r\n      * @dev checks the account is not frozen, and that the account is not dissolved \r\n      */\r\n    modifier isFrozen() {\r\n        require(frozen == false, \"Account is frozen\");\r\n        _;\r\n    }\r\n\r\n    /**\r\n      * @param _owner : the address of the user creating the account\r\n      * @param _chosenType : the type of account this instance is (as this is the parent contract)\r\n      * @dev creates a new access acount, logs creation\r\n      */\r\n    constructor(address _owner, AccountType _chosenType, uint _limit)\r\n        public\r\n    {\r\n        onwerAddress = _owner;\r\n        bankAddress = msg.sender;\r\n        thisAccountType = _chosenType;\r\n        accountLimit = _limit;\r\n        frozen = false;\r\n        emit LogCreatedAccessAcount(_owner, msg.sender, _chosenType);\r\n    }\r\n\r\n    /**\r\n      * @dev returns if the account is frozen (true) or (false) if not\r\n      */\r\n    function getFrozen() \r\n        public\r\n        view\r\n        returns(bool)\r\n    {\r\n        return frozen;\r\n    }\r\n\r\n    /**\r\n      * @dev allows for anyone to check the balance of an account\r\n      */\r\n    function getBalance()\r\n        public\r\n        view\r\n        returns(uint)\r\n    {\r\n        return balance;\r\n    }\r\n\r\n    function getOwner()\r\n        public\r\n        view\r\n        isOwner()\r\n        returns(address)\r\n    {\r\n        return onwerAddress;\r\n    }\r\n\r\n    function getLimit()\r\n        public\r\n        view\r\n        isOwner()\r\n        returns(uint)\r\n    {\r\n        return accountLimit;\r\n    }\r\n\r\n    function setLimit(uint _newLimit)\r\n        public\r\n        isBank()\r\n    {\r\n        accountLimit = _newLimit;\r\n    }\r\n\r\n    /**\r\n      * @dev freezed the account. The isFrozen() is used to ensure an already\r\n      *     frozen account cannot be frozen again.\r\n      */\r\n    function freeze()\r\n        public\r\n        isOwner()\r\n        isFrozen()\r\n    {\r\n        frozen = true;\r\n    }\r\n\r\n    /**\r\n      * @dev unfreezes account. Manually checks the account is not dissolved. \r\n      */\r\n    function defrost()\r\n        public \r\n        isOwner()\r\n    {\r\n        require(frozen == true, \"Account already unfrozen\");\r\n        frozen = false;\r\n    }\r\n\r\n    event LogProgress(string _desc);\r\n\r\n    /**\r\n      * @dev lets the bank dissolve account, sending all funds to the owner\r\n      */\r\n    function dissolve()\r\n        public\r\n        isBank()\r\n    {\r\n        frozen =  true;\r\n        emit LogProgress(\"(access) disolve\");\r\n        selfdestruct(onwerAddress);\r\n    }\r\n\r\n    /**\r\n      * @param _newOwnerAddress : the address of the new owner.\r\n      * @dev allows the user to change the wallet assosiated with the account. \r\n      *     The require ensures that this function cannot be called on the trust account\r\n      *     from the parent function (this function).\r\n      */\r\n    function changeOwner(address _newOwnerAddress)\r\n        public\r\n        isBank()\r\n        isFrozen()\r\n    {\r\n        freeze();\r\n\r\n        require(thisAccountType != AccountType.trust, \"Please use changeOwner function in trust contract\");\r\n        onwerAddress = _newOwnerAddress;\r\n\r\n        defrost();\r\n    }\r\n\r\n    /**\r\n      * @dev allows anyone to deposit into the account, as depositing can be \r\n      *     done by any wallet. Requires the amount to be greater than 0 and also\r\n      *     ensures that the balance will not overflow from deposit. \r\n      */\r\n    function deposit()\r\n        public\r\n        payable\r\n        isFrozen()\r\n    {\r\n        require(msg.value > 0, \"Value cannot be negative\");\r\n        require(balance + msg.value > 0, \"Value cannot make balance negative\");\r\n        require(balance + msg.value <= accountLimit, \"Deposit takes account over limit\");\r\n        balance += msg.value;\r\n    }\r\n\r\n    \r\n\r\n    /**\r\n      * @param _amount : the amount to be withdrawn \r\n      * @dev only allows the owner(s) to withdraw. Dose not allow use if account is frozen \r\n      *     (or dissolved). Ensures the usage of witdraw in the child contracts for both delay\r\n      *     contracts and trust contracts. \r\n      */\r\n    function withdraw(uint _amount)\r\n        public\r\n        isOwner()\r\n        isFrozen()\r\n    {\r\n        freeze();\r\n\r\n        emit LogUnexpectedRevert(\"(in withdraw) after freezing account\");\r\n\r\n        require(thisAccountType == AccountType.access, \"Please use withdraw function in child contract\");\r\n\r\n        emit LogUnexpectedRevert(\"(after 1 require) after trust/delay require\");\r\n\r\n        require(_amount <= balance, \"Cannot withdraw more funds than available\");\r\n\r\n        emit LogUnexpectedRevert(\"(after 2 require) after amount gets checked against balance\");\r\n\r\n        balance -= _amount;\r\n        onwerAddress.transfer(_amount);\r\n\r\n        emit LogUnexpectedRevert(\"() after transfering amount\");\r\n        defrost();\r\n    }\r\n}",
  "sourcePath": "C:\\Users\\Veronica Coutts\\Desktop\\Desktop\\Work\\LinumLabs\\PoCBank\\pocbank\\contracts\\AccessAccount.sol",
  "ast": {
    "absolutePath": "/C/Users/Veronica Coutts/Desktop/Desktop/Work/LinumLabs/PoCBank/pocbank/contracts/AccessAccount.sol",
    "exportedSymbols": {
      "AccessAccount": [
        331
      ]
    },
    "id": 332,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".24"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:0"
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 331,
        "linearizedBaseContracts": [
          331
        ],
        "name": "AccessAccount",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 3,
            "name": "bankAddress",
            "nodeType": "VariableDeclaration",
            "scope": 331,
            "src": "57:19:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 2,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "57:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 5,
            "name": "onwerAddress",
            "nodeType": "VariableDeclaration",
            "scope": 331,
            "src": "83:20:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 4,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "83:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 7,
            "name": "balance",
            "nodeType": "VariableDeclaration",
            "scope": 331,
            "src": "110:12:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 6,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "110:4:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 9,
            "name": "accountLimit",
            "nodeType": "VariableDeclaration",
            "scope": 331,
            "src": "129:17:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 8,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "129:4:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 11,
            "name": "frozen",
            "nodeType": "VariableDeclaration",
            "scope": 331,
            "src": "153:11:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 10,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "153:4:0",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "canonicalName": "AccessAccount.AccountType",
            "id": 15,
            "members": [
              {
                "id": 12,
                "name": "access",
                "nodeType": "EnumValue",
                "src": "189:6:0"
              },
              {
                "id": 13,
                "name": "delay",
                "nodeType": "EnumValue",
                "src": "197:5:0"
              },
              {
                "id": 14,
                "name": "trust",
                "nodeType": "EnumValue",
                "src": "204:5:0"
              }
            ],
            "name": "AccountType",
            "nodeType": "EnumDefinition",
            "src": "171:39:0"
          },
          {
            "constant": false,
            "id": 17,
            "name": "thisAccountType",
            "nodeType": "VariableDeclaration",
            "scope": 331,
            "src": "216:27:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_enum$_AccountType_$15",
              "typeString": "enum AccessAccount.AccountType"
            },
            "typeName": {
              "contractScope": null,
              "id": 16,
              "name": "AccountType",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 15,
              "src": "216:11:0",
              "typeDescriptions": {
                "typeIdentifier": "t_enum$_AccountType_$15",
                "typeString": "enum AccessAccount.AccountType"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 25,
            "name": "LogCreatedAccessAcount",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 24,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 19,
                  "indexed": false,
                  "name": "_owner",
                  "nodeType": "VariableDeclaration",
                  "scope": 25,
                  "src": "281:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 18,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "281:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 21,
                  "indexed": false,
                  "name": "_bank",
                  "nodeType": "VariableDeclaration",
                  "scope": 25,
                  "src": "297:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 20,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "297:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 23,
                  "indexed": false,
                  "name": "_accountType",
                  "nodeType": "VariableDeclaration",
                  "scope": 25,
                  "src": "312:24:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_AccountType_$15",
                    "typeString": "enum AccessAccount.AccountType"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 22,
                    "name": "AccountType",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 15,
                    "src": "312:11:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_AccountType_$15",
                      "typeString": "enum AccessAccount.AccountType"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "280:57:0"
            },
            "src": "252:86:0"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 29,
            "name": "LogUnexpectedRevert",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 28,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 27,
                  "indexed": false,
                  "name": "_where",
                  "nodeType": "VariableDeclaration",
                  "scope": 29,
                  "src": "370:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 26,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "370:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "369:15:0"
            },
            "src": "344:41:0"
          },
          {
            "body": {
              "id": 45,
              "nodeType": "Block",
              "src": "500:132:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 40,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 35,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 32,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1774,
                              "src": "519:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 33,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "519:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "argumentTypes": null,
                            "id": 34,
                            "name": "bankAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3,
                            "src": "533:11:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "519:25:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 39,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 36,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1774,
                              "src": "548:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 37,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "548:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "argumentTypes": null,
                            "id": 38,
                            "name": "onwerAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5,
                            "src": "562:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "548:26:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "519:55:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "46756e6374696f6e206f6e6c792061636365737369626c65206279206f776e6572",
                        "id": 41,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "576:35:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_dd6450ca276836e38b1dd2be3a334a55e6006ff1f4a08207e1d0de05d67a95c0",
                          "typeString": "literal_string \"Function only accessible by owner\""
                        },
                        "value": "Function only accessible by owner"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_dd6450ca276836e38b1dd2be3a334a55e6006ff1f4a08207e1d0de05d67a95c0",
                          "typeString": "literal_string \"Function only accessible by owner\""
                        }
                      ],
                      "id": 31,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1777,
                        1778
                      ],
                      "referencedDeclaration": 1778,
                      "src": "511:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 42,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "511:101:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 43,
                  "nodeType": "ExpressionStatement",
                  "src": "511:101:0"
                },
                {
                  "id": 44,
                  "nodeType": "PlaceholderStatement",
                  "src": "623:1:0"
                }
              ]
            },
            "documentation": "@dev checks that the msg.sender is an owner of the contract\r",
            "id": 46,
            "name": "isOwner",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 30,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "497:2:0"
            },
            "src": "481:151:0",
            "visibility": "internal"
          },
          {
            "body": {
              "id": 57,
              "nodeType": "Block",
              "src": "759:97:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 52,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 49,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1774,
                            "src": "778:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 50,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "778:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 51,
                          "name": "bankAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3,
                          "src": "792:11:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "778:25:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "46756e6374696f6e206f6e6c7920757361626c652062792062616e6b",
                        "id": 53,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "805:30:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1d046328a9e935cbd211b4d4ccf040030585a0af7534349d44453a2eb2970d94",
                          "typeString": "literal_string \"Function only usable by bank\""
                        },
                        "value": "Function only usable by bank"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1d046328a9e935cbd211b4d4ccf040030585a0af7534349d44453a2eb2970d94",
                          "typeString": "literal_string \"Function only usable by bank\""
                        }
                      ],
                      "id": 48,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1777,
                        1778
                      ],
                      "referencedDeclaration": 1778,
                      "src": "770:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 54,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "770:66:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 55,
                  "nodeType": "ExpressionStatement",
                  "src": "770:66:0"
                },
                {
                  "id": 56,
                  "nodeType": "PlaceholderStatement",
                  "src": "847:1:0"
                }
              ]
            },
            "documentation": "@dev checks that the bank is the only address able of using the function\r",
            "id": 58,
            "name": "isBank",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 47,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "756:2:0"
            },
            "src": "741:115:0",
            "visibility": "internal"
          },
          {
            "body": {
              "id": 68,
              "nodeType": "Block",
              "src": "991:76:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 63,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 61,
                          "name": "frozen",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11,
                          "src": "1010:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "66616c7365",
                          "id": 62,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1020:5:0",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        },
                        "src": "1010:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4163636f756e742069732066726f7a656e",
                        "id": 64,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1027:19:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_aa6035f7734045ef47709c6dcf4f54cd8586483a8a28727b39433bff7d8df094",
                          "typeString": "literal_string \"Account is frozen\""
                        },
                        "value": "Account is frozen"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_aa6035f7734045ef47709c6dcf4f54cd8586483a8a28727b39433bff7d8df094",
                          "typeString": "literal_string \"Account is frozen\""
                        }
                      ],
                      "id": 60,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1777,
                        1778
                      ],
                      "referencedDeclaration": 1778,
                      "src": "1002:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 65,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1002:45:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 66,
                  "nodeType": "ExpressionStatement",
                  "src": "1002:45:0"
                },
                {
                  "id": 67,
                  "nodeType": "PlaceholderStatement",
                  "src": "1058:1:0"
                }
              ]
            },
            "documentation": "@dev checks the account is not frozen, and that the account is not dissolved \r",
            "id": 69,
            "name": "isFrozen",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 59,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "988:2:0"
            },
            "src": "971:96:0",
            "visibility": "internal"
          },
          {
            "body": {
              "id": 106,
              "nodeType": "Block",
              "src": "1408:243:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 80,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 78,
                      "name": "onwerAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5,
                      "src": "1419:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 79,
                      "name": "_owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 71,
                      "src": "1434:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1419:21:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 81,
                  "nodeType": "ExpressionStatement",
                  "src": "1419:21:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 85,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 82,
                      "name": "bankAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3,
                      "src": "1451:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 83,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1774,
                        "src": "1465:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 84,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "1465:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1451:24:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 86,
                  "nodeType": "ExpressionStatement",
                  "src": "1451:24:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 89,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 87,
                      "name": "thisAccountType",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 17,
                      "src": "1486:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_AccountType_$15",
                        "typeString": "enum AccessAccount.AccountType"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 88,
                      "name": "_chosenType",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 73,
                      "src": "1504:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_AccountType_$15",
                        "typeString": "enum AccessAccount.AccountType"
                      }
                    },
                    "src": "1486:29:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_AccountType_$15",
                      "typeString": "enum AccessAccount.AccountType"
                    }
                  },
                  "id": 90,
                  "nodeType": "ExpressionStatement",
                  "src": "1486:29:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 93,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 91,
                      "name": "accountLimit",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9,
                      "src": "1526:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 92,
                      "name": "_limit",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 75,
                      "src": "1541:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1526:21:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 94,
                  "nodeType": "ExpressionStatement",
                  "src": "1526:21:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 97,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 95,
                      "name": "frozen",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11,
                      "src": "1558:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "66616c7365",
                      "id": 96,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1567:5:0",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "1558:14:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 98,
                  "nodeType": "ExpressionStatement",
                  "src": "1558:14:0"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 100,
                        "name": "_owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 71,
                        "src": "1611:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 101,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1774,
                          "src": "1619:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 102,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "1619:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 103,
                        "name": "_chosenType",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 73,
                        "src": "1631:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_AccountType_$15",
                          "typeString": "enum AccessAccount.AccountType"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_enum$_AccountType_$15",
                          "typeString": "enum AccessAccount.AccountType"
                        }
                      ],
                      "id": 99,
                      "name": "LogCreatedAccessAcount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 25,
                      "src": "1588:22:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_enum$_AccountType_$15_$returns$__$",
                        "typeString": "function (address,address,enum AccessAccount.AccountType)"
                      }
                    },
                    "id": 104,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1588:55:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 105,
                  "nodeType": "EmitStatement",
                  "src": "1583:60:0"
                }
              ]
            },
            "documentation": "@param _owner : the address of the user creating the account\r\n@param _chosenType : the type of account this instance is (as this is the parent contract)\r\n@dev creates a new access acount, logs creation\r",
            "id": 107,
            "implemented": true,
            "isConstructor": true,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 76,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 71,
                  "name": "_owner",
                  "nodeType": "VariableDeclaration",
                  "scope": 107,
                  "src": "1333:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 70,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1333:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 73,
                  "name": "_chosenType",
                  "nodeType": "VariableDeclaration",
                  "scope": 107,
                  "src": "1349:23:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_AccountType_$15",
                    "typeString": "enum AccessAccount.AccountType"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 72,
                    "name": "AccountType",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 15,
                    "src": "1349:11:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_AccountType_$15",
                      "typeString": "enum AccessAccount.AccountType"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 75,
                  "name": "_limit",
                  "nodeType": "VariableDeclaration",
                  "scope": 107,
                  "src": "1374:11:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 74,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1374:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1332:54:0"
            },
            "payable": false,
            "returnParameters": {
              "id": 77,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1408:0:0"
            },
            "scope": 331,
            "src": "1321:330:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 114,
              "nodeType": "Block",
              "src": "1830:32:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 112,
                    "name": "frozen",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 11,
                    "src": "1848:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 111,
                  "id": 113,
                  "nodeType": "Return",
                  "src": "1841:13:0"
                }
              ]
            },
            "documentation": "@dev returns if the account is frozen (true) or (false) if not\r",
            "id": 115,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [],
            "name": "getFrozen",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 108,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1768:2:0"
            },
            "payable": false,
            "returnParameters": {
              "id": 111,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 110,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 115,
                  "src": "1819:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 109,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1819:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1818:6:0"
            },
            "scope": 331,
            "src": "1750:112:0",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 122,
              "nodeType": "Block",
              "src": "2036:33:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 120,
                    "name": "balance",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 7,
                    "src": "2054:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 119,
                  "id": 121,
                  "nodeType": "Return",
                  "src": "2047:14:0"
                }
              ]
            },
            "documentation": "@dev allows for anyone to check the balance of an account\r",
            "id": 123,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [],
            "name": "getBalance",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 116,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1975:2:0"
            },
            "payable": false,
            "returnParameters": {
              "id": 119,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 118,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 123,
                  "src": "2025:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 117,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2025:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2024:6:0"
            },
            "scope": 331,
            "src": "1956:113:0",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 132,
              "nodeType": "Block",
              "src": "2177:38:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 130,
                    "name": "onwerAddress",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 5,
                    "src": "2195:12:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 129,
                  "id": 131,
                  "nodeType": "Return",
                  "src": "2188:19:0"
                }
              ]
            },
            "documentation": null,
            "id": 133,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [
              {
                "arguments": [],
                "id": 126,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 125,
                  "name": "isOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 46,
                  "src": "2136:7:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2136:9:0"
              }
            ],
            "name": "getOwner",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 124,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2094:2:0"
            },
            "payable": false,
            "returnParameters": {
              "id": 129,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 128,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 133,
                  "src": "2163:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 127,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2163:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2162:9:0"
            },
            "scope": 331,
            "src": "2077:138:0",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 142,
              "nodeType": "Block",
              "src": "2320:38:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 140,
                    "name": "accountLimit",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 9,
                    "src": "2338:12:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 139,
                  "id": 141,
                  "nodeType": "Return",
                  "src": "2331:19:0"
                }
              ]
            },
            "documentation": null,
            "id": 143,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [
              {
                "arguments": [],
                "id": 136,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 135,
                  "name": "isOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 46,
                  "src": "2282:7:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2282:9:0"
              }
            ],
            "name": "getLimit",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 134,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2240:2:0"
            },
            "payable": false,
            "returnParameters": {
              "id": 139,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 138,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 143,
                  "src": "2309:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 137,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2309:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2308:6:0"
            },
            "scope": 331,
            "src": "2223:135:0",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 154,
              "nodeType": "Block",
              "src": "2439:43:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 152,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 150,
                      "name": "accountLimit",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9,
                      "src": "2450:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 151,
                      "name": "_newLimit",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 145,
                      "src": "2465:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2450:24:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 153,
                  "nodeType": "ExpressionStatement",
                  "src": "2450:24:0"
                }
              ]
            },
            "documentation": null,
            "id": 155,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": [],
                "id": 148,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 147,
                  "name": "isBank",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 58,
                  "src": "2425:6:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2425:8:0"
              }
            ],
            "name": "setLimit",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 146,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 145,
                  "name": "_newLimit",
                  "nodeType": "VariableDeclaration",
                  "scope": 155,
                  "src": "2384:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 144,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2384:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2383:16:0"
            },
            "payable": false,
            "returnParameters": {
              "id": 149,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2439:0:0"
            },
            "scope": 331,
            "src": "2366:116:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 166,
              "nodeType": "Block",
              "src": "2718:32:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 164,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 162,
                      "name": "frozen",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11,
                      "src": "2729:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "74727565",
                      "id": 163,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2738:4:0",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "2729:13:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 165,
                  "nodeType": "ExpressionStatement",
                  "src": "2729:13:0"
                }
              ]
            },
            "documentation": "@dev freezed the account. The isFrozen() is used to ensure an already\r\n    frozen account cannot be frozen again.\r",
            "id": 167,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": [],
                "id": 158,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 157,
                  "name": "isOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 46,
                  "src": "2683:7:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2683:9:0"
              },
              {
                "arguments": [],
                "id": 160,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 159,
                  "name": "isFrozen",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 69,
                  "src": "2702:8:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2702:10:0"
              }
            ],
            "name": "freeze",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 156,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2655:2:0"
            },
            "payable": false,
            "returnParameters": {
              "id": 161,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2718:0:0"
            },
            "scope": 331,
            "src": "2640:110:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 183,
              "nodeType": "Block",
              "src": "2917:95:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 175,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 173,
                          "name": "frozen",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11,
                          "src": "2936:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "74727565",
                          "id": 174,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2946:4:0",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "src": "2936:14:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4163636f756e7420616c726561647920756e66726f7a656e",
                        "id": 176,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2952:26:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_cbaba5ca5eee80b242689171d13ac1d444b494bfe428ddcc3bc2da7eb903a7f7",
                          "typeString": "literal_string \"Account already unfrozen\""
                        },
                        "value": "Account already unfrozen"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_cbaba5ca5eee80b242689171d13ac1d444b494bfe428ddcc3bc2da7eb903a7f7",
                          "typeString": "literal_string \"Account already unfrozen\""
                        }
                      ],
                      "id": 172,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1777,
                        1778
                      ],
                      "referencedDeclaration": 1778,
                      "src": "2928:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 177,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2928:51:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 178,
                  "nodeType": "ExpressionStatement",
                  "src": "2928:51:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 181,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 179,
                      "name": "frozen",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11,
                      "src": "2990:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "66616c7365",
                      "id": 180,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2999:5:0",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "2990:14:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 182,
                  "nodeType": "ExpressionStatement",
                  "src": "2990:14:0"
                }
              ]
            },
            "documentation": "@dev unfreezes account. Manually checks the account is not dissolved. \r",
            "id": 184,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": [],
                "id": 170,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 169,
                  "name": "isOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 46,
                  "src": "2902:7:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2902:9:0"
              }
            ],
            "name": "defrost",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 168,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2873:2:0"
            },
            "payable": false,
            "returnParameters": {
              "id": 171,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2917:0:0"
            },
            "scope": 331,
            "src": "2857:155:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 188,
            "name": "LogProgress",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 187,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 186,
                  "indexed": false,
                  "name": "_desc",
                  "nodeType": "VariableDeclaration",
                  "scope": 188,
                  "src": "3038:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 185,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "3038:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3037:14:0"
            },
            "src": "3020:32:0"
          },
          {
            "body": {
              "id": 205,
              "nodeType": "Block",
              "src": "3215:117:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 195,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 193,
                      "name": "frozen",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11,
                      "src": "3226:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "74727565",
                      "id": 194,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3236:4:0",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "3226:14:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 196,
                  "nodeType": "ExpressionStatement",
                  "src": "3226:14:0"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "2861636365737329206469736f6c7665",
                        "id": 198,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3268:18:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b0cc63748d718341623415d617b7a601623207d02e4fc80f44b6e125000863dd",
                          "typeString": "literal_string \"(access) disolve\""
                        },
                        "value": "(access) disolve"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_b0cc63748d718341623415d617b7a601623207d02e4fc80f44b6e125000863dd",
                          "typeString": "literal_string \"(access) disolve\""
                        }
                      ],
                      "id": 197,
                      "name": "LogProgress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 188,
                      "src": "3256:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory)"
                      }
                    },
                    "id": 199,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3256:31:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 200,
                  "nodeType": "EmitStatement",
                  "src": "3251:36:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 202,
                        "name": "onwerAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5,
                        "src": "3311:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 201,
                      "name": "selfdestruct",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1782,
                      "src": "3298:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_selfdestruct_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 203,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3298:26:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 204,
                  "nodeType": "ExpressionStatement",
                  "src": "3298:26:0"
                }
              ]
            },
            "documentation": "@dev lets the bank dissolve account, sending all funds to the owner\r",
            "id": 206,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": [],
                "id": 191,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 190,
                  "name": "isBank",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 58,
                  "src": "3201:6:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "3201:8:0"
              }
            ],
            "name": "dissolve",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 189,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3173:2:0"
            },
            "payable": false,
            "returnParameters": {
              "id": 192,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3215:0:0"
            },
            "scope": 331,
            "src": "3156:176:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 233,
              "nodeType": "Block",
              "src": "3756:202:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 215,
                      "name": "freeze",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 167,
                      "src": "3767:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 216,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3767:8:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 217,
                  "nodeType": "ExpressionStatement",
                  "src": "3767:8:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_enum$_AccountType_$15",
                          "typeString": "enum AccessAccount.AccountType"
                        },
                        "id": 222,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 219,
                          "name": "thisAccountType",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 17,
                          "src": "3796:15:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_AccountType_$15",
                            "typeString": "enum AccessAccount.AccountType"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 220,
                            "name": "AccountType",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 15,
                            "src": "3815:11:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_AccountType_$15_$",
                              "typeString": "type(enum AccessAccount.AccountType)"
                            }
                          },
                          "id": 221,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "trust",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "3815:17:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_AccountType_$15",
                            "typeString": "enum AccessAccount.AccountType"
                          }
                        },
                        "src": "3796:36:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "506c6561736520757365206368616e67654f776e65722066756e6374696f6e20696e20747275737420636f6e7472616374",
                        "id": 223,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3834:51:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_207398d9aeb00362f7efe52693243144dc109dfe8889a3c085b86968c4207bb3",
                          "typeString": "literal_string \"Please use changeOwner function in trust contract\""
                        },
                        "value": "Please use changeOwner function in trust contract"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_207398d9aeb00362f7efe52693243144dc109dfe8889a3c085b86968c4207bb3",
                          "typeString": "literal_string \"Please use changeOwner function in trust contract\""
                        }
                      ],
                      "id": 218,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1777,
                        1778
                      ],
                      "referencedDeclaration": 1778,
                      "src": "3788:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 224,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3788:98:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 225,
                  "nodeType": "ExpressionStatement",
                  "src": "3788:98:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 228,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 226,
                      "name": "onwerAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5,
                      "src": "3897:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 227,
                      "name": "_newOwnerAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 208,
                      "src": "3912:16:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "3897:31:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 229,
                  "nodeType": "ExpressionStatement",
                  "src": "3897:31:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 230,
                      "name": "defrost",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 184,
                      "src": "3941:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 231,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3941:9:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 232,
                  "nodeType": "ExpressionStatement",
                  "src": "3941:9:0"
                }
              ]
            },
            "documentation": "@param _newOwnerAddress : the address of the new owner.\r\n@dev allows the user to change the wallet assosiated with the account. \r\n    The require ensures that this function cannot be called on the trust account\r\n    from the parent function (this function).\r",
            "id": 234,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": [],
                "id": 211,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 210,
                  "name": "isBank",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 58,
                  "src": "3722:6:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "3722:8:0"
              },
              {
                "arguments": [],
                "id": 213,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 212,
                  "name": "isFrozen",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 69,
                  "src": "3740:8:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "3740:10:0"
              }
            ],
            "name": "changeOwner",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 209,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 208,
                  "name": "_newOwnerAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 234,
                  "src": "3671:24:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 207,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3671:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3670:26:0"
            },
            "payable": false,
            "returnParameters": {
              "id": 214,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3756:0:0"
            },
            "scope": 331,
            "src": "3650:308:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 272,
              "nodeType": "Block",
              "src": "4295:272:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 243,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 240,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1774,
                            "src": "4314:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 241,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "4314:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 242,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4326:1:0",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "4314:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "56616c75652063616e6e6f74206265206e65676174697665",
                        "id": 244,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4329:26:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ae51529c68bc8a8c8254bb1333099d3bd1966b4fa6f1d8559b817f48e1a74fe4",
                          "typeString": "literal_string \"Value cannot be negative\""
                        },
                        "value": "Value cannot be negative"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ae51529c68bc8a8c8254bb1333099d3bd1966b4fa6f1d8559b817f48e1a74fe4",
                          "typeString": "literal_string \"Value cannot be negative\""
                        }
                      ],
                      "id": 239,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1777,
                        1778
                      ],
                      "referencedDeclaration": 1778,
                      "src": "4306:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 245,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4306:50:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 246,
                  "nodeType": "ExpressionStatement",
                  "src": "4306:50:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 253,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 251,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 248,
                            "name": "balance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7,
                            "src": "4375:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 249,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1774,
                              "src": "4385:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 250,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "value",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "4385:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "4375:19:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 252,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4397:1:0",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "4375:23:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "56616c75652063616e6e6f74206d616b652062616c616e6365206e65676174697665",
                        "id": 254,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4400:36:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6f0cdd80d7f2a011b1c3fa77955f46d1cf404501a582d791d75ea04eea7d8bc2",
                          "typeString": "literal_string \"Value cannot make balance negative\""
                        },
                        "value": "Value cannot make balance negative"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_6f0cdd80d7f2a011b1c3fa77955f46d1cf404501a582d791d75ea04eea7d8bc2",
                          "typeString": "literal_string \"Value cannot make balance negative\""
                        }
                      ],
                      "id": 247,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1777,
                        1778
                      ],
                      "referencedDeclaration": 1778,
                      "src": "4367:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 255,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4367:70:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 256,
                  "nodeType": "ExpressionStatement",
                  "src": "4367:70:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 263,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 261,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 258,
                            "name": "balance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7,
                            "src": "4456:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 259,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1774,
                              "src": "4466:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 260,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "value",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "4466:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "4456:19:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 262,
                          "name": "accountLimit",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9,
                          "src": "4479:12:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "4456:35:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4465706f7369742074616b6573206163636f756e74206f766572206c696d6974",
                        "id": 264,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4493:34:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f67497e031c7f0c0214ce1cf137150746cf1d775c45ae45b0be21175424cf145",
                          "typeString": "literal_string \"Deposit takes account over limit\""
                        },
                        "value": "Deposit takes account over limit"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f67497e031c7f0c0214ce1cf137150746cf1d775c45ae45b0be21175424cf145",
                          "typeString": "literal_string \"Deposit takes account over limit\""
                        }
                      ],
                      "id": 257,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1777,
                        1778
                      ],
                      "referencedDeclaration": 1778,
                      "src": "4448:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 265,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4448:80:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 266,
                  "nodeType": "ExpressionStatement",
                  "src": "4448:80:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 270,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 267,
                      "name": "balance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7,
                      "src": "4539:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 268,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1774,
                        "src": "4550:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 269,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "value",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "4550:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4539:20:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 271,
                  "nodeType": "ExpressionStatement",
                  "src": "4539:20:0"
                }
              ]
            },
            "documentation": "@dev allows anyone to deposit into the account, as depositing can be \r\n    done by any wallet. Requires the amount to be greater than 0 and also\r\n    ensures that the balance will not overflow from deposit. \r",
            "id": 273,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": [],
                "id": 237,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 236,
                  "name": "isFrozen",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 69,
                  "src": "4279:8:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "4279:10:0"
              }
            ],
            "name": "deposit",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 235,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4234:2:0"
            },
            "payable": true,
            "returnParameters": {
              "id": 238,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4295:0:0"
            },
            "scope": 331,
            "src": "4218:349:0",
            "stateMutability": "payable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 329,
              "nodeType": "Block",
              "src": "4982:642:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 282,
                      "name": "freeze",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 167,
                      "src": "4993:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 283,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4993:8:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 284,
                  "nodeType": "ExpressionStatement",
                  "src": "4993:8:0"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "28696e2077697468647261772920616674657220667265657a696e67206163636f756e74",
                        "id": 286,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5039:38:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_0d619d309e62092db6b9641a3d13bf6d5b16754e503fcf65baf19e2b6c50539e",
                          "typeString": "literal_string \"(in withdraw) after freezing account\""
                        },
                        "value": "(in withdraw) after freezing account"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_0d619d309e62092db6b9641a3d13bf6d5b16754e503fcf65baf19e2b6c50539e",
                          "typeString": "literal_string \"(in withdraw) after freezing account\""
                        }
                      ],
                      "id": 285,
                      "name": "LogUnexpectedRevert",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 29,
                      "src": "5019:19:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory)"
                      }
                    },
                    "id": 287,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5019:59:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 288,
                  "nodeType": "EmitStatement",
                  "src": "5014:64:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_enum$_AccountType_$15",
                          "typeString": "enum AccessAccount.AccountType"
                        },
                        "id": 293,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 290,
                          "name": "thisAccountType",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 17,
                          "src": "5099:15:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_AccountType_$15",
                            "typeString": "enum AccessAccount.AccountType"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 291,
                            "name": "AccountType",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 15,
                            "src": "5118:11:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_AccountType_$15_$",
                              "typeString": "type(enum AccessAccount.AccountType)"
                            }
                          },
                          "id": 292,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "access",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "5118:18:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_AccountType_$15",
                            "typeString": "enum AccessAccount.AccountType"
                          }
                        },
                        "src": "5099:37:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "506c65617365207573652077697468647261772066756e6374696f6e20696e206368696c6420636f6e7472616374",
                        "id": 294,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5138:48:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a0dc6b3bd5e760b84d320bbb1a0505db13840fa3416d591af511a7af01314c57",
                          "typeString": "literal_string \"Please use withdraw function in child contract\""
                        },
                        "value": "Please use withdraw function in child contract"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a0dc6b3bd5e760b84d320bbb1a0505db13840fa3416d591af511a7af01314c57",
                          "typeString": "literal_string \"Please use withdraw function in child contract\""
                        }
                      ],
                      "id": 289,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1777,
                        1778
                      ],
                      "referencedDeclaration": 1778,
                      "src": "5091:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 295,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5091:96:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 296,
                  "nodeType": "ExpressionStatement",
                  "src": "5091:96:0"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "28616674657220312072657175697265292061667465722074727573742f64656c61792072657175697265",
                        "id": 298,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5225:45:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_be4b3960b50578a1eac812d117810a2e7e547be7e84a9790e73da2987dfb62a4",
                          "typeString": "literal_string \"(after 1 require) after trust/delay require\""
                        },
                        "value": "(after 1 require) after trust/delay require"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_be4b3960b50578a1eac812d117810a2e7e547be7e84a9790e73da2987dfb62a4",
                          "typeString": "literal_string \"(after 1 require) after trust/delay require\""
                        }
                      ],
                      "id": 297,
                      "name": "LogUnexpectedRevert",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 29,
                      "src": "5205:19:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory)"
                      }
                    },
                    "id": 299,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5205:66:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 300,
                  "nodeType": "EmitStatement",
                  "src": "5200:71:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 304,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 302,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 275,
                          "src": "5292:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 303,
                          "name": "balance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7,
                          "src": "5303:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "5292:18:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "43616e6e6f74207769746864726177206d6f72652066756e6473207468616e20617661696c61626c65",
                        "id": 305,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5312:43:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d15e93cab5918dd0aa1d910a324e1f388d8547f033b0fcb3f1dea913db0dc215",
                          "typeString": "literal_string \"Cannot withdraw more funds than available\""
                        },
                        "value": "Cannot withdraw more funds than available"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d15e93cab5918dd0aa1d910a324e1f388d8547f033b0fcb3f1dea913db0dc215",
                          "typeString": "literal_string \"Cannot withdraw more funds than available\""
                        }
                      ],
                      "id": 301,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1777,
                        1778
                      ],
                      "referencedDeclaration": 1778,
                      "src": "5284:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 306,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5284:72:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 307,
                  "nodeType": "ExpressionStatement",
                  "src": "5284:72:0"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "286166746572203220726571756972652920616674657220616d6f756e74206765747320636865636b656420616761696e73742062616c616e6365",
                        "id": 309,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5394:61:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ddb98adc80d1f0920dd4897d1d1652e99ffb27e97e9a20da6511eda29eed014d",
                          "typeString": "literal_string \"(after 2 require) after amount gets checked against balance\""
                        },
                        "value": "(after 2 require) after amount gets checked against balance"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_ddb98adc80d1f0920dd4897d1d1652e99ffb27e97e9a20da6511eda29eed014d",
                          "typeString": "literal_string \"(after 2 require) after amount gets checked against balance\""
                        }
                      ],
                      "id": 308,
                      "name": "LogUnexpectedRevert",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 29,
                      "src": "5374:19:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory)"
                      }
                    },
                    "id": 310,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5374:82:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 311,
                  "nodeType": "EmitStatement",
                  "src": "5369:87:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 314,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 312,
                      "name": "balance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7,
                      "src": "5469:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "-=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 313,
                      "name": "_amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 275,
                      "src": "5480:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5469:18:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 315,
                  "nodeType": "ExpressionStatement",
                  "src": "5469:18:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 319,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 275,
                        "src": "5520:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 316,
                        "name": "onwerAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5,
                        "src": "5498:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 318,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "5498:21:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 320,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5498:30:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 321,
                  "nodeType": "ExpressionStatement",
                  "src": "5498:30:0"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "2829206166746572207472616e73666572696e6720616d6f756e74",
                        "id": 323,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5566:29:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_0b81e4fc552819bfccef2211ad18b0f678c31af2ca1758d29672f61838768d7f",
                          "typeString": "literal_string \"() after transfering amount\""
                        },
                        "value": "() after transfering amount"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_0b81e4fc552819bfccef2211ad18b0f678c31af2ca1758d29672f61838768d7f",
                          "typeString": "literal_string \"() after transfering amount\""
                        }
                      ],
                      "id": 322,
                      "name": "LogUnexpectedRevert",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 29,
                      "src": "5546:19:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory)"
                      }
                    },
                    "id": 324,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5546:50:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 325,
                  "nodeType": "EmitStatement",
                  "src": "5541:55:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 326,
                      "name": "defrost",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 184,
                      "src": "5607:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 327,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5607:9:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 328,
                  "nodeType": "ExpressionStatement",
                  "src": "5607:9:0"
                }
              ]
            },
            "documentation": "@param _amount : the amount to be withdrawn \r\n@dev only allows the owner(s) to withdraw. Dose not allow use if account is frozen \r\n    (or dissolved). Ensures the usage of witdraw in the child contracts for both delay\r\n    contracts and trust contracts. \r",
            "id": 330,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": [],
                "id": 278,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 277,
                  "name": "isOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 46,
                  "src": "4947:7:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "4947:9:0"
              },
              {
                "arguments": [],
                "id": 280,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 279,
                  "name": "isFrozen",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 69,
                  "src": "4966:8:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "4966:10:0"
              }
            ],
            "name": "withdraw",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 276,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 275,
                  "name": "_amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 330,
                  "src": "4908:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 274,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "4908:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4907:14:0"
            },
            "payable": false,
            "returnParameters": {
              "id": 281,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4982:0:0"
            },
            "scope": 331,
            "src": "4890:734:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 332,
        "src": "28:5599:0"
      }
    ],
    "src": "0:5627:0"
  },
  "legacyAST": {
    "absolutePath": "/C/Users/Veronica Coutts/Desktop/Desktop/Work/LinumLabs/PoCBank/pocbank/contracts/AccessAccount.sol",
    "exportedSymbols": {
      "AccessAccount": [
        331
      ]
    },
    "id": 332,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".24"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:0"
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 331,
        "linearizedBaseContracts": [
          331
        ],
        "name": "AccessAccount",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 3,
            "name": "bankAddress",
            "nodeType": "VariableDeclaration",
            "scope": 331,
            "src": "57:19:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 2,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "57:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 5,
            "name": "onwerAddress",
            "nodeType": "VariableDeclaration",
            "scope": 331,
            "src": "83:20:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 4,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "83:7:0",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 7,
            "name": "balance",
            "nodeType": "VariableDeclaration",
            "scope": 331,
            "src": "110:12:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 6,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "110:4:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 9,
            "name": "accountLimit",
            "nodeType": "VariableDeclaration",
            "scope": 331,
            "src": "129:17:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 8,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "129:4:0",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 11,
            "name": "frozen",
            "nodeType": "VariableDeclaration",
            "scope": 331,
            "src": "153:11:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 10,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "153:4:0",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "canonicalName": "AccessAccount.AccountType",
            "id": 15,
            "members": [
              {
                "id": 12,
                "name": "access",
                "nodeType": "EnumValue",
                "src": "189:6:0"
              },
              {
                "id": 13,
                "name": "delay",
                "nodeType": "EnumValue",
                "src": "197:5:0"
              },
              {
                "id": 14,
                "name": "trust",
                "nodeType": "EnumValue",
                "src": "204:5:0"
              }
            ],
            "name": "AccountType",
            "nodeType": "EnumDefinition",
            "src": "171:39:0"
          },
          {
            "constant": false,
            "id": 17,
            "name": "thisAccountType",
            "nodeType": "VariableDeclaration",
            "scope": 331,
            "src": "216:27:0",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_enum$_AccountType_$15",
              "typeString": "enum AccessAccount.AccountType"
            },
            "typeName": {
              "contractScope": null,
              "id": 16,
              "name": "AccountType",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 15,
              "src": "216:11:0",
              "typeDescriptions": {
                "typeIdentifier": "t_enum$_AccountType_$15",
                "typeString": "enum AccessAccount.AccountType"
              }
            },
            "value": null,
            "visibility": "internal"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 25,
            "name": "LogCreatedAccessAcount",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 24,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 19,
                  "indexed": false,
                  "name": "_owner",
                  "nodeType": "VariableDeclaration",
                  "scope": 25,
                  "src": "281:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 18,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "281:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 21,
                  "indexed": false,
                  "name": "_bank",
                  "nodeType": "VariableDeclaration",
                  "scope": 25,
                  "src": "297:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 20,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "297:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 23,
                  "indexed": false,
                  "name": "_accountType",
                  "nodeType": "VariableDeclaration",
                  "scope": 25,
                  "src": "312:24:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_AccountType_$15",
                    "typeString": "enum AccessAccount.AccountType"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 22,
                    "name": "AccountType",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 15,
                    "src": "312:11:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_AccountType_$15",
                      "typeString": "enum AccessAccount.AccountType"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "280:57:0"
            },
            "src": "252:86:0"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 29,
            "name": "LogUnexpectedRevert",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 28,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 27,
                  "indexed": false,
                  "name": "_where",
                  "nodeType": "VariableDeclaration",
                  "scope": 29,
                  "src": "370:13:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 26,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "370:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "369:15:0"
            },
            "src": "344:41:0"
          },
          {
            "body": {
              "id": 45,
              "nodeType": "Block",
              "src": "500:132:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 40,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 35,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 32,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1774,
                              "src": "519:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 33,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "519:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "argumentTypes": null,
                            "id": 34,
                            "name": "bankAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3,
                            "src": "533:11:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "519:25:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 39,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 36,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1774,
                              "src": "548:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 37,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "548:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "argumentTypes": null,
                            "id": 38,
                            "name": "onwerAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5,
                            "src": "562:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "548:26:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "519:55:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "46756e6374696f6e206f6e6c792061636365737369626c65206279206f776e6572",
                        "id": 41,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "576:35:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_dd6450ca276836e38b1dd2be3a334a55e6006ff1f4a08207e1d0de05d67a95c0",
                          "typeString": "literal_string \"Function only accessible by owner\""
                        },
                        "value": "Function only accessible by owner"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_dd6450ca276836e38b1dd2be3a334a55e6006ff1f4a08207e1d0de05d67a95c0",
                          "typeString": "literal_string \"Function only accessible by owner\""
                        }
                      ],
                      "id": 31,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1777,
                        1778
                      ],
                      "referencedDeclaration": 1778,
                      "src": "511:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 42,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "511:101:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 43,
                  "nodeType": "ExpressionStatement",
                  "src": "511:101:0"
                },
                {
                  "id": 44,
                  "nodeType": "PlaceholderStatement",
                  "src": "623:1:0"
                }
              ]
            },
            "documentation": "@dev checks that the msg.sender is an owner of the contract\r",
            "id": 46,
            "name": "isOwner",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 30,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "497:2:0"
            },
            "src": "481:151:0",
            "visibility": "internal"
          },
          {
            "body": {
              "id": 57,
              "nodeType": "Block",
              "src": "759:97:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 52,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 49,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1774,
                            "src": "778:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 50,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "778:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 51,
                          "name": "bankAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3,
                          "src": "792:11:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "778:25:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "46756e6374696f6e206f6e6c7920757361626c652062792062616e6b",
                        "id": 53,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "805:30:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1d046328a9e935cbd211b4d4ccf040030585a0af7534349d44453a2eb2970d94",
                          "typeString": "literal_string \"Function only usable by bank\""
                        },
                        "value": "Function only usable by bank"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1d046328a9e935cbd211b4d4ccf040030585a0af7534349d44453a2eb2970d94",
                          "typeString": "literal_string \"Function only usable by bank\""
                        }
                      ],
                      "id": 48,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1777,
                        1778
                      ],
                      "referencedDeclaration": 1778,
                      "src": "770:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 54,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "770:66:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 55,
                  "nodeType": "ExpressionStatement",
                  "src": "770:66:0"
                },
                {
                  "id": 56,
                  "nodeType": "PlaceholderStatement",
                  "src": "847:1:0"
                }
              ]
            },
            "documentation": "@dev checks that the bank is the only address able of using the function\r",
            "id": 58,
            "name": "isBank",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 47,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "756:2:0"
            },
            "src": "741:115:0",
            "visibility": "internal"
          },
          {
            "body": {
              "id": 68,
              "nodeType": "Block",
              "src": "991:76:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 63,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 61,
                          "name": "frozen",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11,
                          "src": "1010:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "66616c7365",
                          "id": 62,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1020:5:0",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        },
                        "src": "1010:15:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4163636f756e742069732066726f7a656e",
                        "id": 64,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1027:19:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_aa6035f7734045ef47709c6dcf4f54cd8586483a8a28727b39433bff7d8df094",
                          "typeString": "literal_string \"Account is frozen\""
                        },
                        "value": "Account is frozen"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_aa6035f7734045ef47709c6dcf4f54cd8586483a8a28727b39433bff7d8df094",
                          "typeString": "literal_string \"Account is frozen\""
                        }
                      ],
                      "id": 60,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1777,
                        1778
                      ],
                      "referencedDeclaration": 1778,
                      "src": "1002:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 65,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1002:45:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 66,
                  "nodeType": "ExpressionStatement",
                  "src": "1002:45:0"
                },
                {
                  "id": 67,
                  "nodeType": "PlaceholderStatement",
                  "src": "1058:1:0"
                }
              ]
            },
            "documentation": "@dev checks the account is not frozen, and that the account is not dissolved \r",
            "id": 69,
            "name": "isFrozen",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 59,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "988:2:0"
            },
            "src": "971:96:0",
            "visibility": "internal"
          },
          {
            "body": {
              "id": 106,
              "nodeType": "Block",
              "src": "1408:243:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 80,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 78,
                      "name": "onwerAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5,
                      "src": "1419:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 79,
                      "name": "_owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 71,
                      "src": "1434:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1419:21:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 81,
                  "nodeType": "ExpressionStatement",
                  "src": "1419:21:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 85,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 82,
                      "name": "bankAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3,
                      "src": "1451:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 83,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1774,
                        "src": "1465:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 84,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "1465:10:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1451:24:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 86,
                  "nodeType": "ExpressionStatement",
                  "src": "1451:24:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 89,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 87,
                      "name": "thisAccountType",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 17,
                      "src": "1486:15:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_AccountType_$15",
                        "typeString": "enum AccessAccount.AccountType"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 88,
                      "name": "_chosenType",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 73,
                      "src": "1504:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_AccountType_$15",
                        "typeString": "enum AccessAccount.AccountType"
                      }
                    },
                    "src": "1486:29:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_AccountType_$15",
                      "typeString": "enum AccessAccount.AccountType"
                    }
                  },
                  "id": 90,
                  "nodeType": "ExpressionStatement",
                  "src": "1486:29:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 93,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 91,
                      "name": "accountLimit",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9,
                      "src": "1526:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 92,
                      "name": "_limit",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 75,
                      "src": "1541:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1526:21:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 94,
                  "nodeType": "ExpressionStatement",
                  "src": "1526:21:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 97,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 95,
                      "name": "frozen",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11,
                      "src": "1558:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "66616c7365",
                      "id": 96,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1567:5:0",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "1558:14:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 98,
                  "nodeType": "ExpressionStatement",
                  "src": "1558:14:0"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 100,
                        "name": "_owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 71,
                        "src": "1611:6:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 101,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1774,
                          "src": "1619:3:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 102,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "1619:10:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 103,
                        "name": "_chosenType",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 73,
                        "src": "1631:11:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_AccountType_$15",
                          "typeString": "enum AccessAccount.AccountType"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_enum$_AccountType_$15",
                          "typeString": "enum AccessAccount.AccountType"
                        }
                      ],
                      "id": 99,
                      "name": "LogCreatedAccessAcount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 25,
                      "src": "1588:22:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_enum$_AccountType_$15_$returns$__$",
                        "typeString": "function (address,address,enum AccessAccount.AccountType)"
                      }
                    },
                    "id": 104,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1588:55:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 105,
                  "nodeType": "EmitStatement",
                  "src": "1583:60:0"
                }
              ]
            },
            "documentation": "@param _owner : the address of the user creating the account\r\n@param _chosenType : the type of account this instance is (as this is the parent contract)\r\n@dev creates a new access acount, logs creation\r",
            "id": 107,
            "implemented": true,
            "isConstructor": true,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 76,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 71,
                  "name": "_owner",
                  "nodeType": "VariableDeclaration",
                  "scope": 107,
                  "src": "1333:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 70,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1333:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 73,
                  "name": "_chosenType",
                  "nodeType": "VariableDeclaration",
                  "scope": 107,
                  "src": "1349:23:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_AccountType_$15",
                    "typeString": "enum AccessAccount.AccountType"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 72,
                    "name": "AccountType",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 15,
                    "src": "1349:11:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_AccountType_$15",
                      "typeString": "enum AccessAccount.AccountType"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 75,
                  "name": "_limit",
                  "nodeType": "VariableDeclaration",
                  "scope": 107,
                  "src": "1374:11:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 74,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1374:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1332:54:0"
            },
            "payable": false,
            "returnParameters": {
              "id": 77,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1408:0:0"
            },
            "scope": 331,
            "src": "1321:330:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 114,
              "nodeType": "Block",
              "src": "1830:32:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 112,
                    "name": "frozen",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 11,
                    "src": "1848:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 111,
                  "id": 113,
                  "nodeType": "Return",
                  "src": "1841:13:0"
                }
              ]
            },
            "documentation": "@dev returns if the account is frozen (true) or (false) if not\r",
            "id": 115,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [],
            "name": "getFrozen",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 108,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1768:2:0"
            },
            "payable": false,
            "returnParameters": {
              "id": 111,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 110,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 115,
                  "src": "1819:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 109,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1819:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1818:6:0"
            },
            "scope": 331,
            "src": "1750:112:0",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 122,
              "nodeType": "Block",
              "src": "2036:33:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 120,
                    "name": "balance",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 7,
                    "src": "2054:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 119,
                  "id": 121,
                  "nodeType": "Return",
                  "src": "2047:14:0"
                }
              ]
            },
            "documentation": "@dev allows for anyone to check the balance of an account\r",
            "id": 123,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [],
            "name": "getBalance",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 116,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1975:2:0"
            },
            "payable": false,
            "returnParameters": {
              "id": 119,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 118,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 123,
                  "src": "2025:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 117,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2025:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2024:6:0"
            },
            "scope": 331,
            "src": "1956:113:0",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 132,
              "nodeType": "Block",
              "src": "2177:38:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 130,
                    "name": "onwerAddress",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 5,
                    "src": "2195:12:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 129,
                  "id": 131,
                  "nodeType": "Return",
                  "src": "2188:19:0"
                }
              ]
            },
            "documentation": null,
            "id": 133,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [
              {
                "arguments": [],
                "id": 126,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 125,
                  "name": "isOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 46,
                  "src": "2136:7:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2136:9:0"
              }
            ],
            "name": "getOwner",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 124,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2094:2:0"
            },
            "payable": false,
            "returnParameters": {
              "id": 129,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 128,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 133,
                  "src": "2163:7:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 127,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2163:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2162:9:0"
            },
            "scope": 331,
            "src": "2077:138:0",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 142,
              "nodeType": "Block",
              "src": "2320:38:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 140,
                    "name": "accountLimit",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 9,
                    "src": "2338:12:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 139,
                  "id": 141,
                  "nodeType": "Return",
                  "src": "2331:19:0"
                }
              ]
            },
            "documentation": null,
            "id": 143,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [
              {
                "arguments": [],
                "id": 136,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 135,
                  "name": "isOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 46,
                  "src": "2282:7:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2282:9:0"
              }
            ],
            "name": "getLimit",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 134,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2240:2:0"
            },
            "payable": false,
            "returnParameters": {
              "id": 139,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 138,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 143,
                  "src": "2309:4:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 137,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2309:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2308:6:0"
            },
            "scope": 331,
            "src": "2223:135:0",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 154,
              "nodeType": "Block",
              "src": "2439:43:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 152,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 150,
                      "name": "accountLimit",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9,
                      "src": "2450:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 151,
                      "name": "_newLimit",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 145,
                      "src": "2465:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2450:24:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 153,
                  "nodeType": "ExpressionStatement",
                  "src": "2450:24:0"
                }
              ]
            },
            "documentation": null,
            "id": 155,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": [],
                "id": 148,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 147,
                  "name": "isBank",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 58,
                  "src": "2425:6:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2425:8:0"
              }
            ],
            "name": "setLimit",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 146,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 145,
                  "name": "_newLimit",
                  "nodeType": "VariableDeclaration",
                  "scope": 155,
                  "src": "2384:14:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 144,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2384:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "2383:16:0"
            },
            "payable": false,
            "returnParameters": {
              "id": 149,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2439:0:0"
            },
            "scope": 331,
            "src": "2366:116:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 166,
              "nodeType": "Block",
              "src": "2718:32:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 164,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 162,
                      "name": "frozen",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11,
                      "src": "2729:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "74727565",
                      "id": 163,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2738:4:0",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "2729:13:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 165,
                  "nodeType": "ExpressionStatement",
                  "src": "2729:13:0"
                }
              ]
            },
            "documentation": "@dev freezed the account. The isFrozen() is used to ensure an already\r\n    frozen account cannot be frozen again.\r",
            "id": 167,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": [],
                "id": 158,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 157,
                  "name": "isOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 46,
                  "src": "2683:7:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2683:9:0"
              },
              {
                "arguments": [],
                "id": 160,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 159,
                  "name": "isFrozen",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 69,
                  "src": "2702:8:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2702:10:0"
              }
            ],
            "name": "freeze",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 156,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2655:2:0"
            },
            "payable": false,
            "returnParameters": {
              "id": 161,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2718:0:0"
            },
            "scope": 331,
            "src": "2640:110:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 183,
              "nodeType": "Block",
              "src": "2917:95:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 175,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 173,
                          "name": "frozen",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 11,
                          "src": "2936:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "74727565",
                          "id": 174,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2946:4:0",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "src": "2936:14:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4163636f756e7420616c726561647920756e66726f7a656e",
                        "id": 176,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2952:26:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_cbaba5ca5eee80b242689171d13ac1d444b494bfe428ddcc3bc2da7eb903a7f7",
                          "typeString": "literal_string \"Account already unfrozen\""
                        },
                        "value": "Account already unfrozen"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_cbaba5ca5eee80b242689171d13ac1d444b494bfe428ddcc3bc2da7eb903a7f7",
                          "typeString": "literal_string \"Account already unfrozen\""
                        }
                      ],
                      "id": 172,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1777,
                        1778
                      ],
                      "referencedDeclaration": 1778,
                      "src": "2928:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 177,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2928:51:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 178,
                  "nodeType": "ExpressionStatement",
                  "src": "2928:51:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 181,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 179,
                      "name": "frozen",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11,
                      "src": "2990:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "66616c7365",
                      "id": 180,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2999:5:0",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "2990:14:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 182,
                  "nodeType": "ExpressionStatement",
                  "src": "2990:14:0"
                }
              ]
            },
            "documentation": "@dev unfreezes account. Manually checks the account is not dissolved. \r",
            "id": 184,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": [],
                "id": 170,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 169,
                  "name": "isOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 46,
                  "src": "2902:7:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "2902:9:0"
              }
            ],
            "name": "defrost",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 168,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2873:2:0"
            },
            "payable": false,
            "returnParameters": {
              "id": 171,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2917:0:0"
            },
            "scope": 331,
            "src": "2857:155:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 188,
            "name": "LogProgress",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 187,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 186,
                  "indexed": false,
                  "name": "_desc",
                  "nodeType": "VariableDeclaration",
                  "scope": 188,
                  "src": "3038:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 185,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "3038:6:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3037:14:0"
            },
            "src": "3020:32:0"
          },
          {
            "body": {
              "id": 205,
              "nodeType": "Block",
              "src": "3215:117:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 195,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 193,
                      "name": "frozen",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 11,
                      "src": "3226:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "74727565",
                      "id": 194,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3236:4:0",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "3226:14:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 196,
                  "nodeType": "ExpressionStatement",
                  "src": "3226:14:0"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "2861636365737329206469736f6c7665",
                        "id": 198,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3268:18:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b0cc63748d718341623415d617b7a601623207d02e4fc80f44b6e125000863dd",
                          "typeString": "literal_string \"(access) disolve\""
                        },
                        "value": "(access) disolve"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_b0cc63748d718341623415d617b7a601623207d02e4fc80f44b6e125000863dd",
                          "typeString": "literal_string \"(access) disolve\""
                        }
                      ],
                      "id": 197,
                      "name": "LogProgress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 188,
                      "src": "3256:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory)"
                      }
                    },
                    "id": 199,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3256:31:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 200,
                  "nodeType": "EmitStatement",
                  "src": "3251:36:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 202,
                        "name": "onwerAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5,
                        "src": "3311:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 201,
                      "name": "selfdestruct",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1782,
                      "src": "3298:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_selfdestruct_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 203,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3298:26:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 204,
                  "nodeType": "ExpressionStatement",
                  "src": "3298:26:0"
                }
              ]
            },
            "documentation": "@dev lets the bank dissolve account, sending all funds to the owner\r",
            "id": 206,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": [],
                "id": 191,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 190,
                  "name": "isBank",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 58,
                  "src": "3201:6:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "3201:8:0"
              }
            ],
            "name": "dissolve",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 189,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3173:2:0"
            },
            "payable": false,
            "returnParameters": {
              "id": 192,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3215:0:0"
            },
            "scope": 331,
            "src": "3156:176:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 233,
              "nodeType": "Block",
              "src": "3756:202:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 215,
                      "name": "freeze",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 167,
                      "src": "3767:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 216,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3767:8:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 217,
                  "nodeType": "ExpressionStatement",
                  "src": "3767:8:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_enum$_AccountType_$15",
                          "typeString": "enum AccessAccount.AccountType"
                        },
                        "id": 222,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 219,
                          "name": "thisAccountType",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 17,
                          "src": "3796:15:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_AccountType_$15",
                            "typeString": "enum AccessAccount.AccountType"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 220,
                            "name": "AccountType",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 15,
                            "src": "3815:11:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_AccountType_$15_$",
                              "typeString": "type(enum AccessAccount.AccountType)"
                            }
                          },
                          "id": 221,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "trust",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "3815:17:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_AccountType_$15",
                            "typeString": "enum AccessAccount.AccountType"
                          }
                        },
                        "src": "3796:36:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "506c6561736520757365206368616e67654f776e65722066756e6374696f6e20696e20747275737420636f6e7472616374",
                        "id": 223,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3834:51:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_207398d9aeb00362f7efe52693243144dc109dfe8889a3c085b86968c4207bb3",
                          "typeString": "literal_string \"Please use changeOwner function in trust contract\""
                        },
                        "value": "Please use changeOwner function in trust contract"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_207398d9aeb00362f7efe52693243144dc109dfe8889a3c085b86968c4207bb3",
                          "typeString": "literal_string \"Please use changeOwner function in trust contract\""
                        }
                      ],
                      "id": 218,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1777,
                        1778
                      ],
                      "referencedDeclaration": 1778,
                      "src": "3788:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 224,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3788:98:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 225,
                  "nodeType": "ExpressionStatement",
                  "src": "3788:98:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 228,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 226,
                      "name": "onwerAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5,
                      "src": "3897:12:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 227,
                      "name": "_newOwnerAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 208,
                      "src": "3912:16:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "3897:31:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 229,
                  "nodeType": "ExpressionStatement",
                  "src": "3897:31:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 230,
                      "name": "defrost",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 184,
                      "src": "3941:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 231,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3941:9:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 232,
                  "nodeType": "ExpressionStatement",
                  "src": "3941:9:0"
                }
              ]
            },
            "documentation": "@param _newOwnerAddress : the address of the new owner.\r\n@dev allows the user to change the wallet assosiated with the account. \r\n    The require ensures that this function cannot be called on the trust account\r\n    from the parent function (this function).\r",
            "id": 234,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": [],
                "id": 211,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 210,
                  "name": "isBank",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 58,
                  "src": "3722:6:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "3722:8:0"
              },
              {
                "arguments": [],
                "id": 213,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 212,
                  "name": "isFrozen",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 69,
                  "src": "3740:8:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "3740:10:0"
              }
            ],
            "name": "changeOwner",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 209,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 208,
                  "name": "_newOwnerAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 234,
                  "src": "3671:24:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 207,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3671:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "3670:26:0"
            },
            "payable": false,
            "returnParameters": {
              "id": 214,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3756:0:0"
            },
            "scope": 331,
            "src": "3650:308:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 272,
              "nodeType": "Block",
              "src": "4295:272:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 243,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 240,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1774,
                            "src": "4314:3:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 241,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "4314:9:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 242,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4326:1:0",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "4314:13:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "56616c75652063616e6e6f74206265206e65676174697665",
                        "id": 244,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4329:26:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ae51529c68bc8a8c8254bb1333099d3bd1966b4fa6f1d8559b817f48e1a74fe4",
                          "typeString": "literal_string \"Value cannot be negative\""
                        },
                        "value": "Value cannot be negative"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ae51529c68bc8a8c8254bb1333099d3bd1966b4fa6f1d8559b817f48e1a74fe4",
                          "typeString": "literal_string \"Value cannot be negative\""
                        }
                      ],
                      "id": 239,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1777,
                        1778
                      ],
                      "referencedDeclaration": 1778,
                      "src": "4306:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 245,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4306:50:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 246,
                  "nodeType": "ExpressionStatement",
                  "src": "4306:50:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 253,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 251,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 248,
                            "name": "balance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7,
                            "src": "4375:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 249,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1774,
                              "src": "4385:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 250,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "value",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "4385:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "4375:19:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 252,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4397:1:0",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "4375:23:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "56616c75652063616e6e6f74206d616b652062616c616e6365206e65676174697665",
                        "id": 254,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4400:36:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6f0cdd80d7f2a011b1c3fa77955f46d1cf404501a582d791d75ea04eea7d8bc2",
                          "typeString": "literal_string \"Value cannot make balance negative\""
                        },
                        "value": "Value cannot make balance negative"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_6f0cdd80d7f2a011b1c3fa77955f46d1cf404501a582d791d75ea04eea7d8bc2",
                          "typeString": "literal_string \"Value cannot make balance negative\""
                        }
                      ],
                      "id": 247,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1777,
                        1778
                      ],
                      "referencedDeclaration": 1778,
                      "src": "4367:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 255,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4367:70:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 256,
                  "nodeType": "ExpressionStatement",
                  "src": "4367:70:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 263,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 261,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "id": 258,
                            "name": "balance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7,
                            "src": "4456:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 259,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1774,
                              "src": "4466:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 260,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "value",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "4466:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "4456:19:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 262,
                          "name": "accountLimit",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 9,
                          "src": "4479:12:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "4456:35:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4465706f7369742074616b6573206163636f756e74206f766572206c696d6974",
                        "id": 264,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4493:34:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f67497e031c7f0c0214ce1cf137150746cf1d775c45ae45b0be21175424cf145",
                          "typeString": "literal_string \"Deposit takes account over limit\""
                        },
                        "value": "Deposit takes account over limit"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f67497e031c7f0c0214ce1cf137150746cf1d775c45ae45b0be21175424cf145",
                          "typeString": "literal_string \"Deposit takes account over limit\""
                        }
                      ],
                      "id": 257,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1777,
                        1778
                      ],
                      "referencedDeclaration": 1778,
                      "src": "4448:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 265,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4448:80:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 266,
                  "nodeType": "ExpressionStatement",
                  "src": "4448:80:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 270,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 267,
                      "name": "balance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7,
                      "src": "4539:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 268,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1774,
                        "src": "4550:3:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 269,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "value",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "4550:9:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4539:20:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 271,
                  "nodeType": "ExpressionStatement",
                  "src": "4539:20:0"
                }
              ]
            },
            "documentation": "@dev allows anyone to deposit into the account, as depositing can be \r\n    done by any wallet. Requires the amount to be greater than 0 and also\r\n    ensures that the balance will not overflow from deposit. \r",
            "id": 273,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": [],
                "id": 237,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 236,
                  "name": "isFrozen",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 69,
                  "src": "4279:8:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "4279:10:0"
              }
            ],
            "name": "deposit",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 235,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4234:2:0"
            },
            "payable": true,
            "returnParameters": {
              "id": 238,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4295:0:0"
            },
            "scope": 331,
            "src": "4218:349:0",
            "stateMutability": "payable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 329,
              "nodeType": "Block",
              "src": "4982:642:0",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 282,
                      "name": "freeze",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 167,
                      "src": "4993:6:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 283,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4993:8:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 284,
                  "nodeType": "ExpressionStatement",
                  "src": "4993:8:0"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "28696e2077697468647261772920616674657220667265657a696e67206163636f756e74",
                        "id": 286,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5039:38:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_0d619d309e62092db6b9641a3d13bf6d5b16754e503fcf65baf19e2b6c50539e",
                          "typeString": "literal_string \"(in withdraw) after freezing account\""
                        },
                        "value": "(in withdraw) after freezing account"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_0d619d309e62092db6b9641a3d13bf6d5b16754e503fcf65baf19e2b6c50539e",
                          "typeString": "literal_string \"(in withdraw) after freezing account\""
                        }
                      ],
                      "id": 285,
                      "name": "LogUnexpectedRevert",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 29,
                      "src": "5019:19:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory)"
                      }
                    },
                    "id": 287,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5019:59:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 288,
                  "nodeType": "EmitStatement",
                  "src": "5014:64:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_enum$_AccountType_$15",
                          "typeString": "enum AccessAccount.AccountType"
                        },
                        "id": 293,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 290,
                          "name": "thisAccountType",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 17,
                          "src": "5099:15:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_AccountType_$15",
                            "typeString": "enum AccessAccount.AccountType"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 291,
                            "name": "AccountType",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 15,
                            "src": "5118:11:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_AccountType_$15_$",
                              "typeString": "type(enum AccessAccount.AccountType)"
                            }
                          },
                          "id": 292,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "access",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "5118:18:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_AccountType_$15",
                            "typeString": "enum AccessAccount.AccountType"
                          }
                        },
                        "src": "5099:37:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "506c65617365207573652077697468647261772066756e6374696f6e20696e206368696c6420636f6e7472616374",
                        "id": 294,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5138:48:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a0dc6b3bd5e760b84d320bbb1a0505db13840fa3416d591af511a7af01314c57",
                          "typeString": "literal_string \"Please use withdraw function in child contract\""
                        },
                        "value": "Please use withdraw function in child contract"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a0dc6b3bd5e760b84d320bbb1a0505db13840fa3416d591af511a7af01314c57",
                          "typeString": "literal_string \"Please use withdraw function in child contract\""
                        }
                      ],
                      "id": 289,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1777,
                        1778
                      ],
                      "referencedDeclaration": 1778,
                      "src": "5091:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 295,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5091:96:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 296,
                  "nodeType": "ExpressionStatement",
                  "src": "5091:96:0"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "28616674657220312072657175697265292061667465722074727573742f64656c61792072657175697265",
                        "id": 298,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5225:45:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_be4b3960b50578a1eac812d117810a2e7e547be7e84a9790e73da2987dfb62a4",
                          "typeString": "literal_string \"(after 1 require) after trust/delay require\""
                        },
                        "value": "(after 1 require) after trust/delay require"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_be4b3960b50578a1eac812d117810a2e7e547be7e84a9790e73da2987dfb62a4",
                          "typeString": "literal_string \"(after 1 require) after trust/delay require\""
                        }
                      ],
                      "id": 297,
                      "name": "LogUnexpectedRevert",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 29,
                      "src": "5205:19:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory)"
                      }
                    },
                    "id": 299,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5205:66:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 300,
                  "nodeType": "EmitStatement",
                  "src": "5200:71:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 304,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 302,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 275,
                          "src": "5292:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 303,
                          "name": "balance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 7,
                          "src": "5303:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "5292:18:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "43616e6e6f74207769746864726177206d6f72652066756e6473207468616e20617661696c61626c65",
                        "id": 305,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5312:43:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d15e93cab5918dd0aa1d910a324e1f388d8547f033b0fcb3f1dea913db0dc215",
                          "typeString": "literal_string \"Cannot withdraw more funds than available\""
                        },
                        "value": "Cannot withdraw more funds than available"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d15e93cab5918dd0aa1d910a324e1f388d8547f033b0fcb3f1dea913db0dc215",
                          "typeString": "literal_string \"Cannot withdraw more funds than available\""
                        }
                      ],
                      "id": 301,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        1777,
                        1778
                      ],
                      "referencedDeclaration": 1778,
                      "src": "5284:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 306,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5284:72:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 307,
                  "nodeType": "ExpressionStatement",
                  "src": "5284:72:0"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "286166746572203220726571756972652920616674657220616d6f756e74206765747320636865636b656420616761696e73742062616c616e6365",
                        "id": 309,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5394:61:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ddb98adc80d1f0920dd4897d1d1652e99ffb27e97e9a20da6511eda29eed014d",
                          "typeString": "literal_string \"(after 2 require) after amount gets checked against balance\""
                        },
                        "value": "(after 2 require) after amount gets checked against balance"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_ddb98adc80d1f0920dd4897d1d1652e99ffb27e97e9a20da6511eda29eed014d",
                          "typeString": "literal_string \"(after 2 require) after amount gets checked against balance\""
                        }
                      ],
                      "id": 308,
                      "name": "LogUnexpectedRevert",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 29,
                      "src": "5374:19:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory)"
                      }
                    },
                    "id": 310,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5374:82:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 311,
                  "nodeType": "EmitStatement",
                  "src": "5369:87:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 314,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 312,
                      "name": "balance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7,
                      "src": "5469:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "-=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 313,
                      "name": "_amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 275,
                      "src": "5480:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5469:18:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 315,
                  "nodeType": "ExpressionStatement",
                  "src": "5469:18:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 319,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 275,
                        "src": "5520:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 316,
                        "name": "onwerAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5,
                        "src": "5498:12:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 318,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "5498:21:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 320,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5498:30:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 321,
                  "nodeType": "ExpressionStatement",
                  "src": "5498:30:0"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "2829206166746572207472616e73666572696e6720616d6f756e74",
                        "id": 323,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5566:29:0",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_0b81e4fc552819bfccef2211ad18b0f678c31af2ca1758d29672f61838768d7f",
                          "typeString": "literal_string \"() after transfering amount\""
                        },
                        "value": "() after transfering amount"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_0b81e4fc552819bfccef2211ad18b0f678c31af2ca1758d29672f61838768d7f",
                          "typeString": "literal_string \"() after transfering amount\""
                        }
                      ],
                      "id": 322,
                      "name": "LogUnexpectedRevert",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 29,
                      "src": "5546:19:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory)"
                      }
                    },
                    "id": 324,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5546:50:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 325,
                  "nodeType": "EmitStatement",
                  "src": "5541:55:0"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 326,
                      "name": "defrost",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 184,
                      "src": "5607:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 327,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5607:9:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 328,
                  "nodeType": "ExpressionStatement",
                  "src": "5607:9:0"
                }
              ]
            },
            "documentation": "@param _amount : the amount to be withdrawn \r\n@dev only allows the owner(s) to withdraw. Dose not allow use if account is frozen \r\n    (or dissolved). Ensures the usage of witdraw in the child contracts for both delay\r\n    contracts and trust contracts. \r",
            "id": 330,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": [],
                "id": 278,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 277,
                  "name": "isOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 46,
                  "src": "4947:7:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "4947:9:0"
              },
              {
                "arguments": [],
                "id": 280,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 279,
                  "name": "isFrozen",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 69,
                  "src": "4966:8:0",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "4966:10:0"
              }
            ],
            "name": "withdraw",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 276,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 275,
                  "name": "_amount",
                  "nodeType": "VariableDeclaration",
                  "scope": 330,
                  "src": "4908:12:0",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 274,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "4908:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "4907:14:0"
            },
            "payable": false,
            "returnParameters": {
              "id": 281,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4982:0:0"
            },
            "scope": 331,
            "src": "4890:734:0",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 332,
        "src": "28:5599:0"
      }
    ],
    "src": "0:5627:0"
  },
  "compiler": {
    "name": "solc",
    "version": "0.4.24+commit.e67f0147.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "2.0.1",
  "updatedAt": "2018-10-03T15:04:14.601Z"
}